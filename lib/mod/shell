#!/usr/bin/env sh

# Setup the color arrays for the shell
shell_colors () {
  if [ "$(shell)" != "zsh" ]; then
    declare -A fg
    declare -A fg_bold

    fg[red]='\[\e[0;31m\]'
    fg_bold[red]='\[\e[1;31m\]'
    fg[green]='\[\e[0;32m\]'
    fg_bold[green]='\[\e[1;32m\]'
    fg[yellow]='\[\e[0;33m\]'
    fg_bold[yellow]='\[\e[1;33m\]'
    fg[blue]='\[\e[0;34m\]'
    fg_bold[blue]='\[\e[1;34m\]'
    fg[pink]='\[\e[0;35m\]'
    fg_bold[pink]='\[\e[1;35m\]'
    fg[cyan]='\[\e[0;36m\]'
    fg_bold[cyan]='\[\e[1;36m\]'
    fg[white]='\[\e[0;37m\]'
    fg_bold[white]='\[\e[1;37m\]'
    reset_color='\[\e[0m\]'
  fi
}

# Setup the theme for the shell
shell_theme () {
  shell_colors

  # Colors for LS
  os_matches '\(Linux\|Cygwin\)' && { eval "$(dircolors -b)"; alias ls='ls --color=auto'; }
  os_matches '\(FreeBSD\)' && { export CLICOLOR=1; export LSCOLORS="ExGxFxdxCxDhDxaBadaCeC"; }

  # 256 Colors in the Terminal
  if [ "$TERM" = "xterm" ] || [ "$TERM" = "rxvt-unicode-256color" ]; then
    export TERM="xterm-256color"
    unset COLORTERM
  fi

  # Setup Special Colors
  if info_root; then NCOLOR="${fg[cyan]}"; else NCOLOR="${fg_bold[white]}"; fi
  if info_ws; then HCOLOR="${fg[green]}"; else HCOLOR="${fg[red]}"; fi
  DCOLOR="${fg_bold[yellow]}"

  # Create Prompt
  if [ "$(shell)" = "zsh" ]; then
    PROMPT='[%{$NCOLOR%}%n%{$reset_color%}@'
    PROMPT="$PROMPT"'%{$HCOLOR%}%m%{$reset_color%}:'
    PROMPT="$PROMPT"'%{$DCOLOR%}%30<...<%~%<<%{$reset_color%}]%(!.#.$) '
  else
    PS1="[${NCOLOR}\u${reset_color}@${HCOLOR}\h${reset_color}:${DCOLOR}\w${reset_color}]\$ "
  fi
}

# Create the temporary directory for the shell
shell_tmp () {
  local TMP
  if TMP="$(dir_tmp)"; then
    export HISTFILE="$TMP/history_$(shell)"
    export SAVEHIST="9999"
  else
    export HISTFILE="/dev/null"
    export SAVEHIST="0"
  fi
}

# Initializes useful functions if the caller is a shell
shell_init () {
  shell_tmp
  path_add "$HOME/.bin"
  path_add "$HOME/.cabal/bin"
  agent_auto

  alias root="sudo_wrap su -"
  alias sprunge="curl -F 'sprunge=<-' http://sprunge.us" 
  alias t='laptop_bat; date'

  export EDITOR="vim"
  export PAGER="less"
  export BLOCKSIZE="K"
}

# Returns the name of the preferred shell
shell_get_best () {
  # ZSH preferred
  if which zsh >/dev/null 2>&1; then
    VER="$(zsh --version | awk '{print $2}')"
	VER="$(printf "4.3.9\n%s" "$VER" | sort -bt. -k1,1n -k2,2n -k3,3n -k4,4n -k5,5n | awk 'NR==1')"
	if [ "$VER" = "4.3.9" ]; then
      echo "zsh"
      return 0
    fi
  fi

  # Bash next
  if which bash >/dev/null 2>&1; then
    echo "bash"
    return 0
  fi

  # Fallback to SH
  echo "sh"
}

# Automatically executes the preferred shell
shell_best () {
  if [ "$(shell)" != "$(shell_get_best)" ]; then
    $(shell_get_best) $@
    exit $?
  fi
}

# Set the given shell as the default shell if not already set
shell_default () {
  [ "$#" -ne "1" ] && return 1
  [ "$(basename $(getent passwd $LOGNAME | cut -d: -f7))" = "$1" ] && return 0
  chsh -s "$(which "$1")" "$USER"
}

# Automatically configures the shell configuration files
shell_auto () {
  config_ln "bash_profile" "bashrc" "bash_logout" "zshrc" "zprofile" "zlogout"
  shell_default "$(shell_get_best)"
}
