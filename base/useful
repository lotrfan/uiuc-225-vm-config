#!/bin/sh

# Determine if this is a workstation
WS=0
if [ "$(hostname -s | grep -e "\(wl\|wn\|wd\|dev\)")" != "" ]; then WS=1; fi

# XTERM
if [ "${TERM}" = "xterm" ]; then
	export TERM=xterm-256color
elif [ "${TERM}" = "rxvt-unicode-256color" ]; then
	export TERM=xterm-256color
	unset COLORTERM
fi

# UPDATE CMD
SUDO=$(which sudo 2>/dev/null | grep -v "not found")
if [ "$SUDO" != "" ]; then
	SUDO="${SUDO} "
fi
UN="$(uname)"
alias aura="$SUDO"'aura'
if [ "$UN" = "Linux" ]; then
	ISSUE=$(cat /etc/issue)
	if [ "$(echo "$ISSUE" | grep "Arch Linux")" != "" ]; then
		if [ "$(which packer 2>/dev/null | grep -v "not found")" != "" ]; then
			alias update='packer -Syu'
			alias inst='packer -S'
		else
			alias update="$SUDO"'pacman -Syu'
			alias inst="$SUDO"'sudo pacman -S'
		fi
		alias clean='if [ "$(pacman -Qqdt)" != "" ]; then; sudo pacman -Rns $(pacman -Qqdt); fi'
		alias del="$SUDO"'pacman -Rsdc'
	elif [ "$(echo "$ISSUE" | grep "Debian")" != "" ]; then
		alias update="$SUDO"'apt-get update; '"$SUDO"'apt-get dist-upgrade'
		alias inst="$SUDO"'apt-get install'
		alias del="$SUDO"'apt-get remove'
	fi
elif [ "$UN" = "FreeBSD" ]; then
	if [ "$(which portmaster 2>/dev/null | grep -v "not found")" != "" ]; then
		alias inst="$SUDO"'portmaster -yBd'
		alias update="$SUDO"'portsnap fetch; '"$SUDO"'portsnap update; '"$SUDO"'portmaster -aByd'
		alias del="$SUDO"'portmaster -e'
	else
		alias update="$SUDO"'portsnap fetch; '"$SUDO"'portsnap update'
	fi
elif [ "$UN" = "SunOS" ]; then
	alias update=""$SUDO'pkg update'
	alias inst="$SUDO"'pkg install'
fi

# Sprunge
alias sprunge="curl -F 'sprunge=<-' http://sprunge.us"

# ROOT
alias root="${SUDO}su -"

if [ "$WS" -eq "1" ]; then if [ "$(id -un)" = "william" ]; then
	# KEYRING AUTH INIT on Desktop
	AGENT="$(which gpg-agent 2>/dev/null | grep -v "not found")"
	if [ "$AGENT" != "" ]; then
		RUN="\"$AGENT\" --daemon --enable-ssh-support"
		AGENT="gpg-agent"
	fi
	if [ "$AGENT" = "" ]; then
		AGENT="$(which ssh-agent 2>/dev/null | grep -v "not found")"
		if [ "$AGENT" != "" ]; then
			RUN="\"$AGENT\""
			AGENT="ssh-agent"
		fi
	fi
	if [ "$AGENT" != "" ]; then
		SOCKFILE="${HOME}/.ssh/environment-${HOST}"
		if [ "$SSH_AUTH_SOCK" = "" ]; then
			if [ -f "$SOCKFILE" ]; then
				. "$SOCKFILE"
				PID="$SSH_AGENT_PID"
				if [ "$(uname | grep CYGWIN)" = "" ]; then
					PID2="$(ps -U $USER | grep "$AGENT" | grep -v grep | awk '{print $1}')"
				else
					PID2="$(ps | grep "$AGENT" | grep -v grep | awk '{print $1}')"
				fi
				eval "PID2=($PID2)"
				OPEN=0
				for i in $PID2; do
					if [ "$i" = "$PID" ]; then
						echo "Keyring Agent Already Running"
						OPEN=1
					fi
				done
				if [ "$OPEN" = "0" ]; then
					rm "$SOCKFILE"
				fi
			fi
			if [ ! -f $SOCKFILE ]; then
				echo "$(eval $RUN | grep -v "echo")" > "$SOCKFILE"
				. "$SOCKFILE"
				ssh-add
			fi
		fi
	fi
fi fi

# Battery
alias bat='echo "$(B="$(cat /sys/class/power_supply/BAT*/status)"; ([[ "$B" == "Charging" ]] && echo "↑") || ([[ "$B" == "Discharging" ]] && echo "↓") || echo "⚡")$(expr $(cat /sys/class/power_supply/BAT*/charge_now) \* 100 / $(cat /sys/class/power_supply/BAT*/charge_full))%"'
alias t='ls /sys/class/power_supply | grep BAT >/dev/null 2>/dev/null; [[ "$?" = "0" ]] && echo "$(bat) $(date)" || echo "$(date)"'

# FreeBSD Vars
EDITOR="vim"
export EDITOR
PAGER="less"
export PAGER
BLOCKSIZE="K"
export BLOCKSIZE

# Add Cabal to path
PATH="$PATH:$HOME/.cabal/bin"

# Git Pull All and Submodules
alias gpa="git pull origin master; git submodule foreach --recursive \"(git checkout master; git pull origin master)&\""
