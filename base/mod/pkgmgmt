#!/usr/bin/env sh

# Updates the packages in the package manager
function pkg_update {
  if os_matches 'Arch Linux'; then
    path_hasbin aura && (sudo_wrap aura -Syu; sudo_wrap aura -Aku) && return 0
    path_hasbin packer && (sudo_wrap packer -Syu) && return 0
    path_hasbin pacman && (sudo_wrap pacman -Syu) && return 0
  elif os_matches '\(Debian\|Ubuntu\)'; then
    path_hasbin apt-get && (sudo_wrap apt-get update; sudo_wrap apt-get dist-upgrade) && return 0
  elif os_matches 'FreeBSD'; then
    path_hasbin portmaster && (sudo_wrap portsnap fetch; sudo_wrap portsnap update; sudo_wrap portmaster -ayBd) && return 0
  fi
  echo "Failed to find an update procedure" >&2
  return 1
}

# Installs the package through the package manager
function pkg_install {
  if os_matches 'Arch Linux'; then
    if path_hasbin aura; then
      if sudo_wrap aura -Si $@ >/dev/null 2>&1; then
        sudo_wrap aura -S $@ && return 0
      else
        sudo_wrap aura -A $@ && return 0
      fi
      return 1
    fi
    path_hasbin packer && (sudo_wrap packer -S $@) && return 0
    path_hasbin pacman && (sudo_wrap pacman -S $@) && return 0
  elif os_matches '\(Debian\|Ubuntu\)'; then
    path_hasbin apt-get && (sudo_wrap apt-get install $@) && return 0
  elif os_matches 'FreeBSD'; then
    path_hasbin portmaster && (sudo_wrap portmaster -yBd $@) && return 0
  fi
  echo "Failed to find an install procedure" >&2
  return 1
}

# Removes and purges the package in the package manager
function pkg_remove {
  if os_matches 'Arch Linux'; then
    path_hasbin aura && (sudo_wrap aura -Rsdc $@) && return 0
    path_hasbin pacman && (sudo_wrap pacman -Rsdc) && return 0
  elif os_matches '\(Debian\|Ubuntu\)'; then
    path_hasbin apt-get && (sudo_wrap apt-get purge $@) && return 0
  elif os_matches 'FreeBSD'; then
    path_hasbin portmaster && (sudo_wrap portmaster -esdy $@) && return 0
  fi
  echo "Failed to find a remove procedure" >&2
  return 1
}
alias pkg_delete=pkg_remove

# Cleans the package repository
function pkg_clean {
  if os_matches 'Arch Linux' && path_hasbin pacman; then
    [ "$(pacman -Qqdt)" != "" ] && sudo_wrap pacman -Rns $(pacman -Qqdt) && return 0
  fi
  echo "Failed to find a cleanup procedure" >&2
  return 1
}
