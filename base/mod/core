#!/usr/bin/env sh

# Get the path to the temporary directory
function dir_tmp {
  if [ "$DIR_TMP" = "" ] || [ ! -d "$DIR_TMP" ]; then
    local DIRS;
    DIRS=("/dev/shm" "/run/shm" "/tmp" "/var/tmp")
    for I in $DIRS; do
	  [ -w "$I" ] && (mount | grep '\(tmpfs\|ramfs\)' | grep $I >/dev/null) && DIR_TMP="$I/$USER" && break
    done
    [ "$DIR_TMP" = "" ] && (echo "Failed to find a temporary folder" >&2) && return 1
    [ ! -d "$DIR_TMP" ] && mkdir "$DIR_TMP" && chmod 0700 "$DIR_TMP"
    export DIR_TMP
  fi
  echo "$DIR_TMP"
}

# Get the path to the configuration directory
function dir_conf {
  echo "$CONF"
}

# Tests to see if a binary exists in the path
function path_hasbin {
  [ "$#" -ne "1" ] && return 2
  [ "$(which $1 2>/dev/null | grep -v "not found")" != "" ]
}

# Add to the path if the DIR doesn't exist
function path_add {
    if [ "$(echo "$PATH" | grep "$1" 2>/dev/null)" = "" ]; then
        PATH="${PATH}:$1"
        export PATH
    fi
}

# Wraps the command in sudo if sudo exists and runs it
function sudo_wrap {
  if path_hasbin sudo; then
    sudo $@
  else
    $@
  fi
}

# Determine if this is a workstation
function is_workstation {
  [ "$(hostname -s | grep -e "\(wl\|wn\|wd\|dev\|fantom\)")" != "" ]
}
WS=0
is_workstation && WS=1
