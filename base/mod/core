#!/usr/bin/env sh

# Run the command silently
function run_quiet {
  which $1 >/dev/null 2>&1 && $@ >/dev/null 2>&1
}

# Get the path to the temporary directory
function dir_tmp {
  local DIRS;
  to_array DIRS "/dev/shm /run/shm /tmp /var/tmp"
  for I in $DIRS; do
	[ -w "$I" ] && (mount | grep '\(tmpfs\|ramfs\)' | grep $I >/dev/null) && DIR_TMP="$I/$USER" && break
  done
  [ "$DIR_TMP" = "" ] && (echo "Failed to find a temporary folder" >&2) && return 1
  [ ! -d "$DIR_TMP" ] && mkdir "$DIR_TMP" && chmod 0700 "$DIR_TMP"
  if [ ! -h "$HOME/.tmp" ]; then
    [ -e "$HOME/.tmp" ] && rm -rf "$HOME/.tmp"
    ln -s "$DIR_TMP" "$HOME/.tmp"
  fi
  echo "$DIR_TMP"
}

# Get the path to the configuration directory
function dir_conf {
  echo "$CONF"
}

# Tests to see if a binary exists in the path
function path_hasbin {
  [ "$#" -ne "1" ] && return 2
  [ "$(which $1 2>/dev/null | grep -v "not found")" != "" ]
}

# Add to the path if the DIR doesn't exist
function path_add {
  if [ "$(echo "$PATH" | grep "$1" 2>/dev/null)" = "" ]; then
    export PATH="${PATH}:$1"
  fi
}

# Wraps the command in sudo if sudo exists and runs it
function sudo_wrap {
  if path_hasbin sudo; then
    sudo $@
  else
    $@
  fi
}
